class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int a=1,c=1;
        bool ans=true;
        set<char> s,s1;
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                s.insert(board[i][j]);
                s1.insert(board[j][i]);
                if(board[i][j]!='.'){
                    a++;
                }
                if(board[j][i]!='.'){
                    c++;
                }
                
            }
            if(s.size()!=a){
                ans=false;
                break;
            }
            if(s1.size()!=c){
                ans=false;
                break;
            }
            a=1;
            c=1;
            s.clear();
            s1.clear();
        }
        a=1;
        if(ans==true){
            for(int i=0;i<7;i++){
            for(int j=0;j<3;j++){
                if(board[i][j]!='.'){
                    a++;
                }
                if(board[i+1][j]!='.'){
                    a++;
                }
                if(board[i+2][j]!='.'){
                    a++;
                }
                s.insert(board[i][j]);
                s.insert(board[i+1][j]);
                s.insert(board[i+2][j]);
            }
            if(s.size()!=a){
                ans=false;
            }
            s.clear();
            a=1;

            for(int j=3;j<6;j++){
                if(board[i][j]!='.'){
                    a++;
                }
                if(board[i+1][j]!='.'){
                    a++;
                }
                if(board[i+2][j]!='.'){
                    a++;
                }
                s.insert(board[i][j]);
                s.insert(board[i+1][j]);
                s.insert(board[i+2][j]);
            }
            if(s.size()!=a){
                ans=false;
            }
            s.clear();
            a=1;

            for(int j=6;j<9;j++){
                if(board[i][j]!='.'){
                    a++;
                }
                if(board[i+1][j]!='.'){
                    a++;
                }
                if(board[i+2][j]!='.'){
                    a++;
                }
                s.insert(board[i][j]);
                s.insert(board[i+1][j]);
                s.insert(board[i+2][j]);
            }
            if(s.size()!=a){
                ans=false;
            }
            s.clear();
            a=1;
            
            i=i+2;
        }
        }
        return ans;
    }
};
