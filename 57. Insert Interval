class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int a=0;
        vector<vector<int>> v;
        for(int i=0;i<intervals.size();i++){
            if(intervals[i][0]>newInterval[0]&&intervals[i][0]>newInterval[1]){
                for(int j=0;j<i;j++){
                    v.push_back(intervals[j]);
                }
                v.push_back(newInterval);
                for(int j=i;j<intervals.size();j++){
                    v.push_back(intervals[j]);
                }
                return v;
            }
            else if(intervals[i][1]>=newInterval[0]&&intervals[i][0]>=newInterval[0]){
                intervals[i][1]=max(newInterval[1],intervals[i][1]);
                intervals[i][0]=min(intervals[i][0],newInterval[0]);
                a=1;
                break;
            }
            else if(intervals[i][0]>=newInterval[0]){
                intervals[i][0]=min(intervals[i][0],newInterval[0]);
                a=1;
                break;
            }
            else if(intervals[i][1]>=newInterval[0]){
                intervals[i][1]=max(newInterval[1],intervals[i][1]);
                a=1;
                break;
            }
        }
        if(a==0){
            intervals.push_back(newInterval);
            sort(intervals.begin(),intervals.end());
            return intervals;
        }
        for(int i=0;i<intervals.size()-1;i++){
            if(intervals[i][1]>=intervals[i+1][0]){
                intervals[i][1]=max(intervals[i][1],intervals[i+1][1]);
                intervals.erase(intervals.begin()+i+1);
                i--;
            }
        }
        sort(intervals.begin(),intervals.end());
        return intervals;
    }
};
