class Solution {
public:
    string addStrings(string num1, string num2) {
        int carry=0;
        string num3,n;
        if(num1.length()<num2.length()){
            n=num1;
            num1=num2;
            num2=n;
        }
        int n1=num1.length()-1;
        for(int i=num2.length()-1;i>=0;i--){
            if((num2[i]-'0'+num1[n1]-'0'+carry)>9&&n1!=0){
                num3=num3+to_string((num2[i]-'0'+num1[n1]-'0'+carry)%10);
                carry=(num2[i]-'0'+num1[n1]-'0'+carry)/10;
            }
            else if((num2[i]-'0'+num1[n1]-'0'+carry)>9&&n1==0){
                int x=(num2[i]-'0'+num1[n1]-'0'+carry);
                while(x!=0){
                    num3=num3+to_string(x%10);
                    x=x/10;
                }
                
            }
            else{
                num3=num3+to_string(num2[i]-'0'+num1[n1]-'0'+carry);
                carry=0;
            }
            n1--;
        }
        for(int j=n1;j>=0;j--){
            if((num1[j]-'0'+carry)>9&&j==0){
                int x=(num1[j]-'0'+carry);
                while(x!=0){
                    num3=num3+to_string(x%10);
                    x=x/10;
                }
                
            }
            else if((num1[j]-'0'+carry)>9){
                num3=num3+to_string((num1[j]-'0'+carry)%10);
                carry=(num1[j]-'0'+carry)/10;
            }

            else{
                num3=num3+to_string(num1[j]-'0'+carry);
                carry=0;
            }
            
        }
        reverse(num3.begin(),num3.end());
        return num3;
    }
};
